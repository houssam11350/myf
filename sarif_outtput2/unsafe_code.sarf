{
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "FuSeBMC",
          "contents": [
            "localizedData",
            "nonLocalizedData"
          ],
          "informationUri": "https://github.com/kaled-alshmrany/FuSeBMC",
          "language": "en-US",
          "rules": [
            {
              "id": "FSBMC1001",
              "defaultConfiguration": {
                "enabled": true,
                "level": "Medium",
                "rank": -1.0
              },
              "fullDescription": {
                "text": "This occurs when data is accessed in a way that violates the system's alignment requirements, leading to crashes or degraded performance on certain architectures"
              },
              "name": "Align",
              "shortDescription": {
                "text": "Misaligned memory access"
              }
            },
            {
              "id": "FSBMC1002",
              "defaultConfiguration": {
                "enabled": true,
                "level": "Medium",
                "rank": -1.0
              },
              "fullDescription": {
                "text": "A failed assertion indicates that a critical assumption in the program was violated, which may result in unexpected behavior or termination"
              },
              "name": "Assertions",
              "shortDescription": {
                "text": "Assertion failure"
              }
            },
            {
              "id": "FSBMC1003",
              "defaultConfiguration": {
                "enabled": true,
                "level": "High",
                "rank": -1.0
              },
              "fullDescription": {
                "text": "Happens in concurrent programming when an operation expected to be indivisible (atomic) is interrupted, causing data inconsistency"
              },
              "name": "Atomicity",
              "shortDescription": {
                "text": "Atomic operation violation"
              }
            },
            {
              "id": "FSBMC1004",
              "defaultConfiguration": {
                "enabled": true,
                "level": "High",
                "rank": -1.0
              },
              "fullDescription": {
                "text": "Occurs when accessing an array or memory location outside its allocated range, leading to potential crashes or corruption"
              },
              "name": "Bounds",
              "shortDescription": {
                "text": "Out-of-bounds memory access"
              }
            },
            {
              "id": "FSBMC1005",
              "defaultConfiguration": {
                "enabled": true,
                "level": "High",
                "rank": -1.0
              },
              "fullDescription": {
                "text": "Happens when multiple threads access the same memory location simultaneously without proper synchronization, leading to unpredictable program behavior"
              },
              "name": "DataRaces",
              "shortDescription": {
                "text": "Unsynchronized access to shared memory"
              }
            },
            {
              "id": "FSBMC1006",
              "defaultConfiguration": {
                "enabled": true,
                "level": "High",
                "rank": -1.0
              },
              "fullDescription": {
                "text": "Occurs when multiple threads wait indefinitely for resources held by each other, preventing execution from proceeding."
              },
              "name": "Deadlock",
              "shortDescription": {
                "text": "Circular lock dependency"
              }
            },
            {
              "id": "FSBMC1007",
              "defaultConfiguration": {
                "enabled": true,
                "level": "Medium",
                "rank": -1.0
              },
              "fullDescription": {
                "text": "Happens when a number is divided by zero, leading to runtime crashes or undefined behavior in floating-point operations"
              },
              "name": "DivByZero",
              "shortDescription": {
                "text": "Division by zero error"
              }
            },
            {
              "id": "FSBMC1008",
              "defaultConfiguration": {
                "enabled": true,
                "level": "High",
                "rank": -1.0
              },
              "fullDescription": {
                "text": "Occurs when locks are acquired in an inconsistent order, increasing the likelihood of deadlocks"
              },
              "name": "LockOrder",
              "shortDescription": {
                "text": "Inconsistent lock acquisition"
              }
            },
            {
              "id": "FSBMC1009",
              "defaultConfiguration": {
                "enabled": true,
                "level": "Medium",
                "rank": -1.0
              },
              "fullDescription": {
                "text": "Happens when an invalid floating-point computation, such as 0/0, produces a NaN value, which can cause unintended behavior in numerical operations"
              },
              "name": "Nan",
              "shortDescription": {
                "text": "Not-a-Number (NaN) error in floating-point operations"
              }
            },
            {
              "id": "FSBMC1010",
              "defaultConfiguration": {
                "enabled": true,
                "level": "High",
                "rank": -1.0
              },
              "fullDescription": {
                "text": "Happens when a numerical calculation exceeds the maximum value that a data type can hold, leading to unexpected results"
              },
              "name": "Overflow",
              "shortDescription": {
                "text": "Arithmetic overflow"
              }
            },
            {
              "id": "FSBMC1011",
              "defaultConfiguration": {
                "enabled": true,
                "level": "High",
                "rank": -1.0
              },
              "fullDescription": {
                "text": "Occurs when dereferencing a null or uninitialized pointer, leading to segmentation faults or memory corruption"
              },
              "name": "Pointer",
              "shortDescription": {
                "text": "Invalid pointer access"
              }
            },
            {
              "id": "FSBMC1012",
              "defaultConfiguration": {
                "enabled": true,
                "level": "Medium",
                "rank": -1.0
              },
              "fullDescription": {
                "text": "Happens when accessing uninitialized struct fields or violating struct alignment rules, potentially causing memory corruption"
              },
              "name": "Struct Fields",
              "shortDescription": {
                "text": "Uninitialized or misaligned struct access"
              }
            },
            {
              "id": "FSBMC1013",
              "defaultConfiguration": {
                "enabled": true,
                "level": "Medium",
                "rank": -1.0
              },
              "fullDescription": {
                "text": "Occurs when shifting values beyond their bit-width, resulting in unpredictable behavior"
              },
              "name": "Undefined Shift",
              "shortDescription": {
                "text": "Undefined bitwise shift operation"
              }
            },
            {
              "id": "FSBMC1014",
              "defaultConfiguration": {
                "enabled": true,
                "level": "High",
                "rank": -1.0
              },
              "fullDescription": {
                "text": "Using scanf without input size restrictions can lead to buffer overflows, causing memory corruption"
              },
              "name": "Unlimited Scanf",
              "shortDescription": {
                "text": "Unrestricted input in scanf"
              }
            },
            {
              "id": "FSBMC1015",
              "defaultConfiguration": {
                "enabled": true,
                "level": "Medium",
                "rank": -1.0
              },
              "fullDescription": {
                "text": "When an unsigned integer exceeds its maximum value, it wraps around to zero, potentially causing incorrect logic execution"
              },
              "name": "Unsigned Overflow",
              "shortDescription": {
                "text": "Unsigned integer wraparound"
              }
            },
            {
              "id": "FSBMC1016",
              "defaultConfiguration": {
                "enabled": true,
                "level": "Medium",
                "rank": -1.0
              },
              "fullDescription": {
                "text": "Declaring an excessively large VLA can result in stack overflow and runtime crashes"
              },
              "name": "Vla Size",
              "shortDescription": {
                "text": "Excessive Variable-Length Array (VLA) size"
              }
            },
            {
              "id": "FSBMC1017",
              "defaultConfiguration": {
                "enabled": true,
                "level": "High",
                "rank": -1.0
              },
              "fullDescription": {
                "text": "Occurs when a program continues to use a memory location after freeing it, leading to crashes or security exploits"
              },
              "name": "Use After Free",
              "shortDescription": {
                "text": "Accessing memory after it has been freed"
              }
            },
            {
              "id": "FSBMC1018",
              "defaultConfiguration": {
                "enabled": true,
                "level": "High",
                "rank": -1.0
              },
              "fullDescription": {
                "text": "Happens when a program writes more data than a buffer can hold, causing memory corruption or exploitation risks"
              },
              "name": "Buffer Overflow",
              "shortDescription": {
                "text": "Writing beyond allocated buffer size"
              }
            },
            {
              "id": "FSBMC1019",
              "defaultConfiguration": {
                "enabled": true,
                "level": "High",
                "rank": -1.0
              },
              "fullDescription": {
                "text": "Occurs when user-supplied input is incorrectly formatted, leading to memory leaks or remote code execution"
              },
              "name": "Format String",
              "shortDescription": {
                "text": "Improper use of formatted input/output"
              }
            },
            {
              "id": "FSBMC1020",
              "defaultConfiguration": {
                "enabled": true,
                "level": "Medium",
                "rank": -1.0
              },
              "fullDescription": {
                "text": "Occurs when an integer calculation results in a value lower than its minimum representable range, potentially leading to unexpected behavior"
              },
              "name": "Integer Underflow",
              "shortDescription": {
                "text": "Arithmetic result below minimum integer limit"
              }
            },
            {
              "id": "FSBMC1021",
              "defaultConfiguration": {
                "enabled": true,
                "level": "High",
                "rank": -1.0
              },
              "fullDescription": {
                "text": "Happens when a program\u2019s behavior depends on the sequence or timing of uncontrollable events, leading to unpredictable results"
              },
              "name": "Race Condition",
              "shortDescription": {
                "text": "Uncontrolled sequence of execution in multithreading"
              }
            },
            {
              "id": "FSBMC1022",
              "defaultConfiguration": {
                "enabled": true,
                "level": "High",
                "rank": -1.0
              },
              "fullDescription": {
                "text": "Similar to buffer overflow but occurs in dynamically allocated memory, leading to security exploits"
              },
              "name": "Heap Overflow",
              "shortDescription": {
                "text": "Writing beyond allocated heap memory"
              }
            },
            {
              "id": "FSBMC1023",
              "defaultConfiguration": {
                "enabled": true,
                "level": "Medium",
                "rank": -1.0
              },
              "fullDescription": {
                "text": "Happens when dynamically allocated memory is not freed, leading to excessive memory consumption and performance degradation"
              },
              "name": "Memory Leak",
              "shortDescription": {
                "text": "Failure to release memory properly"
              }
            }
          ],
          "version": "AI-dev"
        }
      },
      "invocations": [
        {
          "executionSuccessful": true,
          "endTimeUtc": "2025-06-03T06:36:19.839768Z",
          "startTimeUtc": "2025-06-03T06:36:19.839737Z"
        }
      ],
      "language": "en-US",
      "newlineSequences": [
        "\r\n",
        "\n"
      ],
      "results": [
        {
          "message": {
            "text": "A vulnerability was found: "
          },
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "id": -1,
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "unsafe_code.c"
                },
                "region": {
                  "byteOffset": -1,
                  "charOffset": -1,
                  "endLine": 3,
                  "startLine": 3
                }
              }
            }
          ],
          "rank": -1.0,
          "ruleId": "assertions",
          "ruleIndex": -1
        },
        {
          "message": {
            "text": "A vulnerability was found: "
          },
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "id": -1,
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "unsafe_code.c"
                },
                "region": {
                  "byteOffset": -1,
                  "charOffset": -1,
                  "endLine": 3,
                  "startLine": 3
                }
              }
            }
          ],
          "rank": -1.0,
          "ruleId": "ub-shift-check",
          "ruleIndex": -1
        },
        {
          "message": {
            "text": "A vulnerability was found: "
          },
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "id": -1,
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "unsafe_code.c"
                },
                "region": {
                  "byteOffset": -1,
                  "charOffset": -1,
                  "endLine": 3,
                  "startLine": 3
                }
              }
            }
          ],
          "rank": -1.0,
          "ruleId": "unsigned-overflow-check",
          "ruleIndex": -1
        },
        {
          "message": {
            "text": "A vulnerability was found: "
          },
          "kind": "fail",
          "level": "error",
          "locations": [
            {
              "id": -1,
              "physicalLocation": {
                "artifactLocation": {
                  "index": -1,
                  "uri": "unsafe_code.c"
                },
                "region": {
                  "byteOffset": -1,
                  "charOffset": -1,
                  "endLine": 3,
                  "startLine": 3
                }
              }
            }
          ],
          "rank": -1.0,
          "ruleId": "overflow-check",
          "ruleIndex": -1
        }
      ]
    }
  ],
  "version": "2.1.0"
}
